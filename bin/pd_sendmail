#!/usr/bin/env bash

[ -z "${PANDORA_BASEDIR}" ] &&
PANDORA_BASEDIR="/var/opt/pandora"

pd_tmpmax=2

! . "${PANDORA_BASEDIR}/lib/pandora.sh" &&
exit 1

pd_usagemsg="$(pd_tput reset dim)[$(pd_tput reset bold fblue)OPTIONS\
$(pd_tput reset dim)] [$(pd_tput reset bold fblue)ARGS$(pd_tput reset dim)]

$(pd_tput dim)Options
-------$(pd_tput)
$(pd_tput bold fyellow)-f$(pd_tput) from
$(pd_tput bold fyellow)-t$(pd_tput) to
$(pd_tput bold fyellow)-s$(pd_tput) subject
$(pd_tput bold fyellow)-m$(pd_tput) message


$(pd_tput dim)Arguments
---------$(pd_tput)
message file[s]
"

pd_seterrcode \
	"nosender" \
	"norecipient" \
	"mailerror" \
	""

tmp1="${pd_tmpname[1]}"
tmp2="${pd_tmpname[2]}"

pd_sigtrap

eval set -- "$(pd_parseopts \
"f:t:r:c:b:s:m:a:" \
"from:,sender:,to:,recipient:,cc:,carbon:,bcc:,blind:,\
subject:,message:,attach:" "$@")"
[ $1 -ne 0 ] && pd_usage
shift

sender=
recipient=
carbon=
blind=
subject=
message=
message_set=
attach=

error=

for arg in "$@"
do

	case "${arg}" in
	-f|--from|--sender)
		sender="$2"
		shift 2
		;;

	-t|-r|--to|--recipient)
		recipient="$2"
		shift 2
		;;

	-c|--cc|--copy)
		carbon="$2"
		shift 2
		;;

	-b|--bcc|--blind)
		blind="$2"
		shift 2
		;;

	-s|--subject)
		subject="$2"
		shift 2
		;;

	-m|--message)
		message="$2"
		message_set="yes"
		shift 2
		;;

	-a|--attach)
		attach="${attach} $2"
		shift 2
		;;

	--)
		shift
		;;
	esac
done
unset arg

[ -n "${error}" ] &&
pd_usage

[ -z "${sender}" ] &&
pd_errmsg "no sender address" &&
pd_exit "nosender"

[ -z "${recipient}" ] &&
pd_errmsg "no recipient address" &&
pd_exit "norecipient"

[ -z "${subject}" ] &&
subject="Ενημέρωση"

if [ -z "${message_set}" ]; then
	cat $*
else
	echo "${message}"
fi >"${tmp1}"

boundary="19032019ABCDE"

echo "From: ${sender}
To: ${recipient}" >"${tmp2}"

echo ">>${carbon}<<" >&2
[ -n "${carbon}" ] &&
echo "Cc: ${carbon}" >>"${tmp2}"

[ -n "${blind}" ] &&
echo "Bcc: ${blind}" >>"${tmp2}"

echo "Subject: ${subject}
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary=\"${boundary}\"" >>"${tmp2}"

if [ -s "${tmp1}" ]; then
	echo "
--${boundary}
Content-Type: text/html; charset=UTF-8
Content-Disposition: inline

<html>
<body>"
	cat "${tmp1}" >>${tmp2}
	echo "</body>
</html>

--${boundary}"
fi >>${tmp2}

if [ -n "${attach}" ]; then
	for i in ${attach}
	do
		[ ! -f "${i}" ] &&
		pd_errmsg "${i}: file not found" &&
		error="yes" &&
		continue

		[ ! -s "${i}" ] &&
		pd_errmsg "${i}: file is empty (ignored)" &&
		continue

		[ ! -r "${i}" ] &&
		pd_errmsg "${i}: cannot read file" &&
		error="yes" &&
		continue

		case "${i}" in
		*.xls)
			tipos="application/vnd.ms-excel"
			;;
		*.txt)
			tipos="text/plain"
			;;
		*.pdf)
			tipos="application/pdf"
			;;
		*)
			pd_errmsg "${i}: unsupported file extension" &&
			error="yes" &&
			continue
			;;
		esac
			
		echo "
--${boundary}
Content-Type: ${tipos}; charset=UTF-8
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename=\"${i}\"
"
		base64 "${i}"
		echo "
--${boundary}"
	done
fi >>"${tmp2}"

! sendmail -t <"${tmp2}" &&
pd_errmsg "sendmail failure" &&
pd_exit "mailerror"

pd_exit 0
